using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using 判断与循环;

namespace 封装
{
    class Program
    {
        static void Main(string[] args)
        {
            //Console.WriteLine("你好");
            //Console.ReadKey();

            //一、访问修饰符
            //public：所有类都可以访问；
            //private：类本身在类的内部可以访问；
            //protected：只有该类对象及其子类对象可以访问
            //internal：同一个程序集的对象可以访问；
            //protected internal：访问限于当前程序集或派生自包含类的类型。


            //二、类
            //在生活中需要对某些事或物进行分类，他可能会有一些特征，也可能有会一些行为。如：动物类，特征：有头、身体、眼睛。。。行为有：跑、吃、睡。。。
            //在程序中这种分类我们可以使用class（类）
            //题目：定义一个动物类

            //三、属性与字段
            //字段：来保存一些特征的数据
            //属性：怎么来获取或赋值这些数据
            //题目：在动物类中使用属性与字段

            //四、方法
            //用户表现出一些行为或者特定的功能，使用时完成特定的业务。
            //方法包括：方法名、返回值、参数列表、方法体
            //题目：在动物类定义一个“吃”方法，并在控制台输出“吃东西”。

            //五、创建对象与构造函数（方法）
            //为引用类型变量赋值时，一般需要创建对象。创建对象的时候必定会调用其类的构造函数
            //当没有定义构造函数时，类中默认会有一个无参数的构造函数。当手动定义有参数的构造函数后，默认无参数的构造函数就不在了。
            //题目：对比使用无参数的构造函数创建动物对象，与使用有参数的构造函数创建动物对象。

            #region 测试

            //Animal animal = new Animal();

            #endregion

            //六、方法的重载
            //在同一个类中，方法名相同，参数列表不同（参数类型不同、参数个数不同），与返回值没有关系，这叫作方法的重载。
            //题目：在动物类定义一个“吃”方法，传入一个string类型的参数来表示吃了什么，并在控制台输出“吃了什么”。

        }
    }
}
