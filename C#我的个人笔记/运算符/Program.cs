using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace 运算符
{
    class Program
    {
        static void Main(string[] args)
        {
            //一、算术运算符
            //   +：把两个操作数相加   
            //   -： 从第一个操作数中减去第二个操作数   
            //   *： 把两个操作数相乘 
            //   /： 分子除以分母 
            //   %： 取模运算符，整除后的余数   
            //   ++：  自增运算符，整数值增加 1  
            //   --：  自减运算符，整数值减少 1  

            //使用每个运算符在控制台输出一次运算的结果
            #region 测试
            //int res = 1 % 3;
            //int i = 1;
            //i++;
            //i = i + 1;
            #endregion

            //题目：下面a与b的结果是多少?
            //int i = 1;
            //int a = i++;
            //int b = ++i;

            //二、关系运算符
            //== 检查两个操作数的值是否相等，如果相等则条件为真。	
            //!= 检查两个操作数的值是否相等，如果不相等则条件为真。
            //> 检查左操作数的值是否大于右操作数的值，如果是则条件为真。
            //< 检查左操作数的值是否小于右操作数的值，如果是则条件为真。	
            //>= 检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。	
            //<= 检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。

            //使用每个运算符在控制台输出一次运算的结果
            #region 测试

            //bool b1 = 1 == 2;
            //bool b2 = 1 != 2;
            //bool b3 = 1 > 2;
            //bool b4 = 2 <= 2;
            #endregion

            //三、逻辑运算符
            //&& （and）称为逻辑与运算符。如果两个操作数都为真，则条件为真。只要有一个为false，结果就是false	
            //|| （or）称为逻辑或运算符。如果两个操作数中有任意一个为真，则条件为真。	
            //!称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。

            //使用每个运算符在控制台输出一次运算的结果
            #region 测试
            //bool b1 = 1 == 1 && 1 > 2;
            //bool b2 = 1 == 1 || 1 > 2;

            //bool b3 = 1 == 2 && 1 > 2;
            //bool b4 = 1 == 2 || 1 > 2;
            #endregion

            //四、常用赋值运算符
            // = 简单的赋值运算符，把右边操作数的值赋给左边操作数 
            // += 加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数
            // -= 减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数 
            // *= 乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数 
            // /= 除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数
            // %= 求模且赋值运算符，求两个操作数的模赋值给左边操作数 

            // 使用每个运算符在控制台输出一次运算的结果
            #region 测试

            #endregion

            //五、其他常用运算符
            //typeof()	返回 class 的类型。
            //? :   三目表达式
            //is	判断对象是否为某一类型。
            //as	强制转换，即使转换失败也不会抛出异常。


            // 使用每个运算符在控制台输出一次运算的结果
            #region 测试

            //var res = typeof(string);
            //var res2 = typeof(int);
            //int a = 1;
            //int b = 2;
            //int res = a > b ? 100 : 200;
            //string str = a > b ? "zs" : "ls";

            //bool b1 = str is String;
            //bool b2 = 1 is int;

            //object o = "18";
            //string i = o as string;
            #endregion


            //运算符优先级
            //题目1：int i = 5+10*2; i的结果是多少？
            //题目2：bool b = 100>10 && 10<5 || 10>100; b的结果是什么？

            #region 测试
            int i = 5 + 10 * 2;

            //         true      false       false
            //bool b = 100 > 10 || 10 < 5 && 10 > 100;
            #endregion
        }
    }
}
